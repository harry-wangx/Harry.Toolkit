<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log" >

  <!-- optional, add some variabeles
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="log.dir" value="${basedir}/log"/>
  <variable name="database.connection.string" value="server=.;database=AppLogDB;uid=sa;pwd=123456"/>
  <variable name="layout.default" value="${guid} ${longdate} ${logger} ${level} ${message} ${callsite} ${exception:format=tostring}"/>
  <variable name="layout.file" value="[${date:format=yyyy-MM-dd HH\:mm\:ss}][${level}] ${message} ${exception:format=tostring}${newline}${stacktrace}${newline}--------------------------------------------------------------------------------------------------------"/>

  <!-- 
  See https://github.com/nlog/nlog/wiki/Configuration-file 
  for information on customizing logging rules and outputs.
   -->
  <targets>
    <!-- 
    add your targets here 
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Writing events to the a file with the date in the filename. 
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
    <!--<target name="console" xsi:type="ColoredConsole"
           layout="${date:format=HH\:mm\:ss}|${level}|${stacktrace}|${message}"/>-->
    <target name="console" xsi:type="Console" layout="${layout.default}" />
    <target name="file" xsi:type="File" fileName="${log.dir}/${shortdate}.${level}.log" layout="${layout.file}" />
    <target name="database" xsi:type="Database" dbProvider="System.Data.SqlClient" connectionString="${database.connection.string}">
      <commandText>
        insert into [SysLog] ([Id],[Level],[Message],[Machine],[Process],[CallSite],[Exception],[CreatedBy],[CreatedOn]) values (@Id,@Level,@Message,@Machine,@Process,@CallSite,@Exception,@CreatedBy,@CreatedOn);
      </commandText>

      <install-command commandType="Text" connectionString="${database.connection.string}" ignoreFailures="true">
        <text>
          if object_id('[SysLog]') is not null
          drop table [SysLog]
          go

          CREATE TABLE [dbo].[SysLog](
          [Id] [char](32) NOT NULL,
          [Level] [varchar](10) NOT NULL,
          [Message] [nvarchar](4000) NULL,
          [Machine] [nvarchar](100) NOT NULL,
          [Process] [nvarchar](100) NOT NULL,
          [CallSite] [varchar](500) NOT NULL,
          [Exception] [nvarchar](4000) NULL,
          [CreatedBy] [varchar](80) NOT NULL,
          [CreatedOn] [datetime] NOT NULL
          ) ON [PRIMARY]
          GO
        </text>
      </install-command>

      <parameter name="@Id" layout="${guid}"/>
      <parameter name="@Level" layout="${level}"/>
      <parameter name="@Message" layout="${message}"/>
      <parameter name="@Machine" layout="${machinename}"/>
      <parameter name="@Process" layout="${processname}"/>
      <parameter name="@CallSite" layout="${callsite:className=true:methodName=true:fileName=true:includeSourcePath=true}"/>
      <parameter name="@Exception" layout="${exception:format=tostring}"/>
      <parameter name="@CreatedBy" layout="${logger}"/>
      <parameter name="@CreatedOn" layout="${date}"/>
    </target>
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <!--<logger name="log.for.web" minlevel="Trace" writeTo="file,database,console" />
    <logger name="log.for.data.api" minlevel="Trace"  writeTo="file,database,console" />
    <logger name="log.for.private.api.server" minlevel="Trace"  writeTo="file,database,console" />
    <logger name="log.for.private.api.handler" minlevel="Trace"  writeTo="file,database,console" />-->
    <logger name="*" minlevel="Trace" writeTo="file" ></logger>
  </rules>
</nlog>